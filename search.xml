<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Java_正则表达式</title>
    <url>/undefined/12588/</url>
    <content><![CDATA[<p>正则表达式：符合一定规则的表达式。</p><ul>
<li><p>作用：用于专门操作字符串。</p>
</li>
<li><p>特点：用一些特定的符号来表示一些代码操作，这样就简化书写。</p>
<blockquote>
<p>所以学习正则表达式，就是在学习一些特殊符号的使用。</p>
</blockquote>
</li>
<li><p>好处：可以简化对字符串的复杂操作。</p>
</li>
<li><p>弊端：符号定义越多，正则越长，阅读性越差。</p>
</li>
</ul><a id="more"></a>

<h1 id="具体操作功能："><a href="#具体操作功能：" class="headerlink" title="具体操作功能："></a>具体操作功能：</h1><h2 id="1-匹配：String"><a href="#1-匹配：String" class="headerlink" title="1.匹配：String"></a>1.匹配：String</h2><p>matches方法。用规则匹配整个字符串，只要有一处不符合规则，就匹配结束，返回false<br>正则表达式中的“\”需要进行转义,所以是成对出现的。<br>字符出现次数：</p>
<ul>
<li>？(一次或一次也没有)</li>
<li>*（零次或多次）</li>
<li>+（一次或多次）</li>
<li>{n}(恰好n次)</li>
<li>{n,}(至少n次)</li>
<li>{n,m}(至少n次，但是不超过m次)</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">对QQ号码进行校验</span><br><span class="line">要求：<span class="number">5</span>~<span class="number">15</span>位，<span class="number">0</span>不能开头，只能是数字</span><br><span class="line"><span class="comment">//这种方式，使用了String类中的方法，进行组合完成了需求，但是代码过于复杂。</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">checkQQ</span><span class="params">()</span></span>&#123;</span><br><span class="line">    String qq=<span class="string">""</span>;</span><br><span class="line">    <span class="keyword">int</span> len = qq.length();</span><br><span class="line">    <span class="keyword">if</span>(len&gt;<span class="number">5</span>&amp;&amp;len&lt;=<span class="number">15</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!qq.startWith(<span class="string">"0"</span>))&#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            char[] arr = qq.toCharArray();</span></span><br><span class="line"><span class="comment">            boolean flag= true;</span></span><br><span class="line"><span class="comment">            for(int x=0;x&lt;arr.length;x++)&#123;</span></span><br><span class="line"><span class="comment">                if(!(arr[x]&gt;'0'&amp;&amp;arr[x]&lt;='9'))&#123;</span></span><br><span class="line"><span class="comment">                     flag=false;</span></span><br><span class="line"><span class="comment">                     break;</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            if(flag)&#123;</span></span><br><span class="line"><span class="comment">                System.out.println("qq:"+qq);</span></span><br><span class="line"><span class="comment">            &#125;else&#123;</span></span><br><span class="line"><span class="comment">                System.out.println("出现非法字符");</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            <span class="comment">//替换为：</span></span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="keyword">long</span> l = Long.parseLong(qq);</span><br><span class="line">                System.out.println(<span class="string">"qq:"</span>+qq);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span>(NumberFormatException e)&#123;</span><br><span class="line">                SYstem.out.println(<span class="string">"出现非法字符"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"0不能开头"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"长度不对"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//使用下面的方法比较简单：regex(正则表达式)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">checkQQ_simple</span><span class="params">()</span></span>&#123;</span><br><span class="line">    String qq =<span class="string">"255616548"</span>;</span><br><span class="line">    String regex =<span class="string">"[1-9][0-9]&#123;4,14&#125;"</span>;<span class="comment">//正则表达式</span></span><br><span class="line">    <span class="keyword">boolean</span> flag = qq.matches(regex);</span><br><span class="line">    <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">        System.out.println(qq+<span class="string">" ...is ok"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(qq+<span class="string">"...不合法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-切割："><a href="#2-切割：" class="headerlink" title="2.切割："></a>2.切割：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">splitDemo</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//String str ="zhangsan  lisi   wangwu";</span></span><br><span class="line">    <span class="comment">//String reg=" +";//按照多个空格来进行切割</span></span><br><span class="line">    <span class="comment">//String str ="zhangsan.lisi.wangwu";</span></span><br><span class="line">    <span class="comment">//String reg ="\\.";//用点来进行切割</span></span><br><span class="line">    <span class="comment">//String str ="c:\\abc\\a.txt";</span></span><br><span class="line">    <span class="comment">//String reg ="\\\\";//用\\来进行切割</span></span><br><span class="line">    String str =<span class="string">"ekjfokksdjfoiewdd"</span>;</span><br><span class="line">    String reg =<span class="string">"(.)\\1"</span>;<span class="comment">//用叠词来进行切割()叫做组 叠词数量不定"(.)\\1+"</span></span><br><span class="line">    \\为了可以让规则的结果被重用，可以将规则封装成一个组，用()来完成，</span><br><span class="line">    \\组的出现都有编号。</span><br><span class="line">    \\从<span class="number">1</span>开始。想要使用已有的组可以通过\n(n就是组的编号)的形式来获取。</span><br><span class="line">    String[]arr = str.split(reg);</span><br><span class="line">    System.out.println(arr.length);</span><br><span class="line">    <span class="keyword">for</span>(String s : arr)&#123;</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3-替换"><a href="#3-替换" class="headerlink" title="3.替换"></a>3.替换</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">replace</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//String str ="dfw902839082193jfefioe21093";</span></span><br><span class="line">    <span class="comment">//String reg ="\\d&#123;5,&#125;";//数字替换</span></span><br><span class="line">    String str =<span class="string">"skdlfaaafewiodddfeoi"</span>;</span><br><span class="line">    <span class="comment">//String reg ="(.)\\1+";//叠词替换为&amp;</span></span><br><span class="line">    <span class="comment">//String newStr="&amp;";</span></span><br><span class="line">    String reg=<span class="string">"(.)\\1+"</span>;<span class="comment">//叠词替换为叠词中的单个词</span></span><br><span class="line">    String newStr =<span class="string">"$1"</span>;<span class="comment">//$1获取前一个规则中的第一个组。</span></span><br><span class="line">    String arr = str.replaceAll(reg,newStr);</span><br><span class="line">    System.out.println(arr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-获取："><a href="#4-获取：" class="headerlink" title="4.获取："></a>4.获取：</h2><blockquote>
<p>按照规则将指定规则的子串在字符串中获取出来。</p>
</blockquote>
<p>操作步骤：</p>
<ul>
<li>1.将正则表达式封装成对象。</li>
<li>2.让正则对象和要操作的字符串相关联。</li>
<li>3.关联后，获取正则匹配引擎。</li>
<li>4.通过引擎对符合规则的子串进行操作，比如取出。<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getDemo</span><span class="params">()</span></span>&#123;</span><br><span class="line">    String str = <span class="string">"abc djfewo dsjfo dfd fjei dfs"</span>;</span><br><span class="line">    String reg=<span class="string">"\\b[a-z]&#123;3&#125;\\b"</span>;<span class="comment">//查找只有三个单词的，需要加一个边界\\b</span></span><br><span class="line">    <span class="comment">//将规则封装成对象。</span></span><br><span class="line">    Pattern p = Pattern.compile(reg);</span><br><span class="line">    <span class="comment">//让正则对象和要作用的字符串进行关联。获取匹配器对象。</span></span><br><span class="line">    Matcher m = p.matcher(str);</span><br><span class="line">    <span class="comment">//System.out.println(m.matches());//其实String类中的matches方法。用的就是Pattern</span></span><br><span class="line">                                    <span class="comment">//和Matcher对象来完成的。只不过被String的方法封</span></span><br><span class="line">                                   <span class="comment">//装后，用起来比较简单，但是功能却单一。</span></span><br><span class="line">    <span class="comment">//group()方法是获取匹配后结果</span></span><br><span class="line">    <span class="comment">//m.find();//将规则作用到字符串上，并进行符合规则的子串查找。是group()方法的前提。</span></span><br><span class="line">    <span class="comment">//System.out.println(m.group());匹配之前先要使用find()进行查找。</span></span><br><span class="line">    <span class="keyword">while</span>(m.find())&#123;</span><br><span class="line">        System.out.println(m.group);</span><br><span class="line">        System.out.println(m.start()+<span class="string">"....."</span>+m.end());<span class="comment">//取得是字串的开头和结尾。</span></span><br><span class="line">    &#125;</span><br><span class="line">                                       </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
练习：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//邮箱匹配</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">checkMail</span><span class="params">()</span></span>&#123;</span><br><span class="line">    String mail = <span class="string">"abc12@sunline.orc.com"</span>;</span><br><span class="line">    String reg=<span class="string">"[a-zA-Z0-9_]+@[a-zA-Z0-9]+(\\.[a-zA-Z]+)&#123;1,3&#125;"</span>;<span class="comment">//较为精确的匹配。</span></span><br><span class="line">    reg=<span class="string">"\\w+@\\w+(\\.\\w+)+"</span>;<span class="comment">//相对不太精确的匹配</span></span><br><span class="line">    System.out.println(mail.matches(reg));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>String</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/undefined/16107/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>目录</title>
    <url>/undefined/2044296166/</url>
    <content><![CDATA[<div align=center>我是目录</div>
<div align=center>对应代码仓库地址如下:</div>

<p><a href="https://github.com/leithda/code_warehouse" target="_blank" rel="noopener">Github代码仓库</a> | <a href="https://gitee.com/leithda/code_warehouse" target="_blank" rel="noopener">Gitee代码仓库</a>      </p>
<a id="more"></a>

<ul>
<li><p>Algorithm(算法)</p>
<ul>
<li>leetcode 题库</li>
<li>started(起步教程)<ul>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/1935562632.html">排序</a></li>
</ul>
</li>
</ul>
</li>
<li><p>Database(数据库)</p>
</li>
<li><p>Tools(工具)</p>
<ul>
<li>git<ul>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/2879265125.html">Git-Book</a></li>
</ul>
</li>
</ul>
</li>
<li><p>Program(编程)</p>
<ul>
<li><p>go</p>
</li>
<li><p>java</p>
<ul>
<li><p>core(jdk源码)</p>
<ul>
<li>collection(集合)<ul>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/3276972275.html">ArrayList</a></li>
<li><input disabled="" type="checkbox"> <a href="">LinkedList</a></li>
</ul>
</li>
<li>thread(多线程)<ul>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/2990170790.html">THreadPoolExecutor</a></li>
</ul>
</li>
</ul>
</li>
<li><p>basic(基础)</p>
<ul>
<li>Date&amp;Time(日期)<ul>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/2517593741.html">java8 处理日期和时间</a></li>
</ul>
</li>
</ul>
</li>
<li><p>opensource(开源代码)</p>
<ul>
<li><a href="../categories/Java/Tomcat">Tomcat(Hot Tomcat Worls)</a><ul>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/1805298928.html">编码前准备</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/1975698977.html">一个简单的Web服务器</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/991341650.html">一个简单的Servlet容器</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/2076341340.html">连接器</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/479209129.html">tomcat的默认连接器</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/3459939477.html">容器</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/1950977268.html">生命周期</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/3784073105.html">日志系统</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/4141534283.html">加载器</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/1571172711.html">session管理</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/3630618985.html">安全</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/1604995939.html">StandardWrapper</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/1923304143.html">StandardContext</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/700695093.html">主机(host)和引擎(engine)</a></li>
<li><input disabled="" type="checkbox"> <a href="">服务器和服务</a></li>
<li><input disabled="" type="checkbox"> <a href="">Digester</a></li>
<li><input disabled="" type="checkbox"> <a href="">关闭钩子</a></li>
<li><input disabled="" type="checkbox"> <a href="">Tomcat 启动</a></li>
<li><input disabled="" type="checkbox"> <a href="">部署器</a></li>
<li><input disabled="" type="checkbox"> <a href="">管理 Servlet</a></li>
<li><input disabled="" type="checkbox"> <a href="">JMX-Based Management</a></li>
</ul>
</li>
<li><a href="../categories/Java/Mybatis/">Mybatis(芋道源码)</a><ul>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/3692374944.html">Mybatis源码解析-概览</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/3510268826.html">Mybatis源码解析-解析器模块</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/2532778738.html">Mybatis源码解析-反射模块</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/1783791857.html">Mybatis源码解析-异常模块</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/3958014950.html">Mybatis源码解析-数据源模块</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/3506020362.html">Mybatis源码解析-事务模块</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/3051614827.html">Mybatis源码解析-缓存模块</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/2139696773.html">Mybatis源码解析-类型模块</a></li>
<li><input disabled="" type="checkbox"> <a href="">Mybatis源码解析-IO模块</a></li>
<li><input disabled="" type="checkbox"> <a href="">Mybatis源码解析-日志</a></li>
<li><input disabled="" type="checkbox"> <a href="">Mybatis源码解析-注解</a></li>
<li><input disabled="" type="checkbox"> <a href="">Mybatis源码解析-Binding</a></li>
<li><input disabled="" type="checkbox"> <a href="">Mybatis源码解析-MyBatis 初始化（一）之加载 mybatis-config</a></li>
<li><input disabled="" type="checkbox"> <a href="">Mybatis源码解析-MyBatis 初始化（二）之加载 Mapper 映射配置文件</a></li>
<li><input disabled="" type="checkbox"> <a href="">Mybatis源码解析-MyBatis 初始化（三）之加载 Statement 配置</a></li>
<li><input disabled="" type="checkbox"> <a href="">Mybatis源码解析-MyBatis 初始化（四）之加载注解配置</a></li>
<li><input disabled="" type="checkbox"> <a href="">Mybatis源码解析-SQL 初始化（上）之 SqlNode</a></li>
<li><input disabled="" type="checkbox"> <a href="">Mybatis源码解析-SQL 初始化（下）之 SqlSource</a></li>
<li><input disabled="" type="checkbox"> <a href="">Mybatis源码解析-SQL 执行（二）之 StatementHandler</a></li>
<li><input disabled="" type="checkbox"> <a href="">Mybatis源码解析-SQL 执行（五）之延迟加载</a></li>
<li><input disabled="" type="checkbox"> <a href="">Mybatis源码解析-会话 SqlSession</a></li>
<li><input disabled="" type="checkbox"> <a href="">Mybatis源码解析-插件体系（一）之原理</a></li>
<li><input disabled="" type="checkbox"> <a href="">Mybatis源码解析-插件体系（二）之 PageHelper</a></li>
<li><input disabled="" type="checkbox"> <a href="">Mybatis源码解析-Spring 集成（一）之调试环境搭建</a></li>
<li><input disabled="" type="checkbox"> <a href="">Mybatis源码解析-Spring 集成（二）之初始化</a></li>
<li><input disabled="" type="checkbox"> <a href="">Mybatis源码解析-Spring 集成（二）之初始化</a></li>
<li><input disabled="" type="checkbox"> <a href="">Mybatis源码解析-Spring 集成（三）之 SqlSession</a></li>
<li><input disabled="" type="checkbox"> <a href="">Mybatis源码解析-Spring 集成（四）之事务</a></li>
<li><input disabled="" type="checkbox"> <a href="">Mybatis源码解析-Spring 集成（五）之批处理</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>started[起步教程]</p>
<ul>
<li><a href="../categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F">design-pattern(设计模式)</a><ul>
<li>创建型<ul>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/4049607742.html">Single Pattern[单例模式]</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/1417187187.html">Factory Pattern[工厂模式]</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/2506759259.html">Abstract Factory Pattern[抽象工厂]</a></li>
<li><input disabled="" type="checkbox"> <a href="">Builder Pattern[建造者模式]</a></li>
<li><input disabled="" type="checkbox"> <a href="">Prototype Pattern[原型模式]</a></li>
</ul>
</li>
<li>行为型<ul>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/1644716670.html">Chain of Responsibility Pattern[责任链模式]</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/256138576.html">Command Pattern[命令模式]</a></li>
<li><input disabled="" type="checkbox"> <a href="">Interpreter Pattern[解释器模式]</a></li>
<li><input disabled="" type="checkbox"> <a href="">Iterator Pattern[迭代器模式]</a></li>
<li><input disabled="" type="checkbox"> <a href="">Mediator Pattern[中介者模式]</a></li>
<li><input disabled="" type="checkbox"> <a href="">Memento Pattern[备忘录模式]</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/2586075670.html">Observer Pattern[观察者模式]</a></li>
<li><input disabled="" type="checkbox"> <a href="">State Pattern[状态模式]</a></li>
<li><input disabled="" type="checkbox"> <a href="">Strategy Pattern[策略模式]</a></li>
<li><input disabled="" type="checkbox"> <a href="">Template Pattern[模板模式]</a></li>
<li><input disabled="" type="checkbox"> <a href="">Visitor Pattern[访问者模式]</a></li>
<li><input disabled="" type="checkbox"> <a href="">Null Object Pattern[空对象模式]</a></li>
<li><input disabled="" type="checkbox"> <a href="">Filter Pattern[过滤器模式]</a></li>
</ul>
</li>
<li>结构型<ul>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/4123342314.html">Adapter Pattern[适配器模式]</a></li>
<li><input disabled="" type="checkbox"> <a href="">Bridge Pattern[桥接模式]</a></li>
<li><input disabled="" type="checkbox"> <a href="">Composite Pattern[组合模式]</a></li>
<li><input disabled="" type="checkbox"> <a href="">Decorator Pattern[装饰器模式]</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/4158556840.html">Facade Pattern[外观模式]</a></li>
<li><input disabled="" type="checkbox"> <a href="">Flyweight Pattern[享元模式]</a></li>
<li><input disabled="" type="checkbox"> <a href="">Proxy Pattern[代理模式]</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="../categories/Java/Spring-Cloud">Spring Cloud(深入理解Spring Cloud与微服务构建)</a><ul>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/518531817.html">Eureka(服务注册与发现)</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/2968946741.html">Ribbon(负载均衡)</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/874139413.html">Feign(声明式调用)</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/1776285993.html">Hystrix(熔断器)</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/1996565447.html">Zuul(智能网关)</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/1798410625.html">Config(配置中心)</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/3833359923.html">Zipkin(链路追踪)</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="../detail/1287611694.html">Admin(微服务监控)</a></li>
<li><input disabled="" type="checkbox"> <a href="">Spring Boot Security</a></li>
<li><input disabled="" type="checkbox"> <a href="">使用Spring Cloud OAuth2</a></li>
<li><input disabled="" type="checkbox"> <a href="">使用Spring Security OAuth2</a></li>
<li><input disabled="" type="checkbox"> <a href="">使用Spring Cloud构建微服务综合案例</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>测试</title>
    <url>/undefined/37773/</url>
    <content><![CDATA[<p>#图片</p><img src="/undefined/37773/abc.jpg" class title="测试图">]]></content>
      <categories>
        <category>Test</category>
      </categories>
      <tags>
        <tag>源码</tag>
      </tags>
  </entry>
</search>
